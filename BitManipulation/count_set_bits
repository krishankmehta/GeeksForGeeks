#include<stdio.h>
#include<stdbool.h>

//O(Log N)
int count_set_bits(int value)
{
    int count = 0;
    if(value<=0)
    {
        return 0;
    }
    while(value!=0)
    {
        value&=(value-1);
        ++count;
    }
    return count;
}

//O(Log N)

bool power_of_two(int value)
{
    if(value<=0)
    {
        return false;
    }
    if(!(value&(value-1)))
    {
        return true;
    }
    return false;
}

bool power_of_four(int value)
{
    if(value<=0)
    {
        return false;
    }
    
    if(!((value)&(value-1)))
    {
        if(value&0x55555555)
        {
            return true;
        }
    }
    return false;
}


//O(Log N)
bool find_parity(int value)
{
    bool parity_flag = false;
    
    while(value)
    {
        parity_flag = !parity_flag;
        value&=(value-1);
    }
    return parity_flag;
}


int main()
{
    
    int value = 16;
    int temp = count_set_bits(value);
    printf("%d\n",temp);
    if(power_of_two(value))
    {
        printf("Is a power of Two\n");
    }
    else
    printf("Is not a power of Two\n");
    
    if(power_of_four(value))
    {
        printf("Is a power of four\n");
    }
    else
    printf("IS not a power of four\n");
    
    if(find_parity(value))
    {
        printf("Odd parity\n");
    }
    else
    {
        printf("Even parity\n");
    }
    
}

